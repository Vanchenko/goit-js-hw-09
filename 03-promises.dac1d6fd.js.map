{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAaA,SAASC,EAAcC,EAAKC,GAC1B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EACFF,EAAQ,CAAEH,MAAKC,QAEfG,EAAO,CAAEJ,MAAKC,O,GAEbA,E,IApBPQ,EAAAZ,GAASa,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAU,aACVC,SAAU,QACVC,QAAS,IAGIC,SAASC,cAAc,SAE/BC,iBAAiB,UAexB,SAAiBC,GACfA,EAAIC,iBAKJ,IAHA,IAAMC,EAASC,OAAOH,EAAII,cAAcC,SAASH,OAAOI,OAClDC,EAAOJ,OAAOH,EAAII,cAAcC,SAASE,KAAKD,OAChDE,EAAWL,OAAOH,EAAII,cAAcC,SAASI,MAAMH,OAC9CI,EAAI,EAAGA,GAAKR,EAAQQ,GAAK,EAC9B9B,EAAc8B,EAAGF,GACdG,MAAK,SAAAC,G,IAAG/B,EAAG+B,EAAH/B,IAAKC,EAAG8B,EAAH9B,IACZQ,EAAAZ,GAASa,OAAOsB,QAAQ,uBAAmCC,OAAVjC,EAAI,QAAUiC,OAAJhC,EAAI,M,IAEhEiC,OAAM,SAAAH,G,IAAG/B,EAAG+B,EAAH/B,IAAKC,EAAG8B,EAAH9B,IACbQ,EAAAZ,GAASa,OAAOyB,QAAQ,sBAAgCF,OAAVjC,EAAI,QAAUiC,OAAJhC,EAAI,M,IAElE0B,GAAsBD,EACtBU,QAAQC,IAAIV,EAAUE,GAExBV,EAAII,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'center-top',\n  distance: '100px',\n  opacity: 1,\n});\n\nconst formEl = document.querySelector(\".form\");\n\nformEl.addEventListener(\"submit\", GenProm);\n\nfunction createPromise(pos, del) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ pos, del });\n    } else {\n      reject({ pos, del });\n    }\n    }, del );\n  });\n}\n\nfunction GenProm(evt) {\n  evt.preventDefault();\n // console.dir(evt.currentTarget.elements);\n  const amount = Number(evt.currentTarget.elements.amount.value);\n  const step = Number(evt.currentTarget.elements.step.value);\n  let sumDelay = Number(evt.currentTarget.elements.delay.value);\n  for (let i = 1; i <= amount; i += 1) {\n      createPromise(i, sumDelay)\n        .then(({ pos, del }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${pos} in ${del}ms`);\n        })\n        .catch(({ pos, del }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${pos} in ${del}ms`);\n        })\n    sumDelay = sumDelay + step;\n    console.log(sumDelay, i);\n  };\n  evt.currentTarget.reset();\n}\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","pos","del","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","init","width","position","distance","opacity","document","querySelector","addEventListener","evt","preventDefault","amount","Number","currentTarget","elements","value","step","sumDelay","delay","i","then","param","success","concat","catch","failure","console","log","reset"],"version":3,"file":"03-promises.dac1d6fd.js.map"}